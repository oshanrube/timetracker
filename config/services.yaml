# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.company_database_url_template: '%env(COMPANY_DATABASE_URL_TEMPLATE)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    app.database_creator:
        class: App\Services\DatabaseManager\DatabaseCreator
        arguments:
            $company_database_url_template: '%app.company_database_url_template%'
            $company_connection_configuration: '@doctrine.dbal.company_connection.configuration'
            $company_connection_event_manager: '@doctrine.dbal.company_connection.event_manager'
            $connection_factory: '@doctrine.dbal.connection_factory'
            $company_configuration: '@doctrine.orm.company_configuration'
            $company_entity_manager: '@doctrine.orm.company_entity_manager'
            $logger: '@logger'
        calls:
            - [ setContainer, [ '@service_container' ] ]

    App\Services\DatabaseManager\DatabaseCreator: "@app.database_creator"

    App\Services\AppDoctrineRegistry:
        public: true
        tags:
            - { name: kernel.reset, method: reset }
        arguments:
            - '@service_container'
            - '%doctrine.connections%'
            - '%doctrine.entity_managers%'
            - default
            - auth
